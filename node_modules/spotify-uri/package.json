{
  "name": "spotify-uri",
  "description": "Parse the various Spotify URI formats into Objects and back",
  "homepage": "https://github.com/TooTallNate/spotify-uri#readme",
  "version": "3.0.2",
  "main": "./dist/index.js",
  "module": "./dist/index.mjs",
  "author": {
    "email": "nathan@tootallnate.net",
    "name": "Nathan Rajlich",
    "url": "http://n8.io/"
  },
  "contributors": [
    {
      "name": "Kiko Beats",
      "email": "josefrancisco.verdu@gmail.com"
    },
    {
      "name": "Stefan Duberg",
      "email": "stefanduberg@me.com"
    },
    {
      "name": "Karl Sander",
      "email": "kall@kall.ws"
    },
    {
      "name": "Shem Magnezi",
      "email": "smagnezi8@gmail.com"
    },
    {
      "name": "Marwan Zibaoui",
      "email": "marwan.zibaoui@gmail.com"
    },
    {
      "name": "Miraculous Owonubi",
      "email": "omiraculous@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/spotify-uri.git"
  },
  "bugs": {
    "url": "https://github.com/TooTallNate/spotify-uri/issues"
  },
  "keywords": [
    "album",
    "artist",
    "embed",
    "episode",
    "parse",
    "playlist",
    "search",
    "spotify",
    "track",
    "uri",
    "url",
    "user"
  ],
  "devDependencies": {
    "@types/node": "12",
    "mocha": "latest",
    "standard-version": "latest",
    "ts-standard": "latest",
    "tsup": "latest",
    "typescript": "latest"
  },
  "engines": {
    "node": ">= 12"
  },
  "files": [
    "dist"
  ],
  "license": "MIT",
  "exports": {
    "import": "./dist/index.mjs",
    "require": "./dist/index.js",
    "types": "./dist/index.d.ts"
  },
  "types": "./dist/index.d.ts",
  "scripts": {
    "build": "tsup src/index.ts --format esm,cjs --dts",
    "prebuild": "rm -rf dist",
    "prerelease": "npm run test",
    "pretest": "npm run build",
    "release": "standard-version && git push --follow-tags origin next && npm publish && gh release create --generate-notes $(git describe --tags --abbrev=0)",
    "test": "mocha",
    "test-lint": "ts-standard"
  },
  "readme": "# spotify-uri\n\n> Parse and format the various Spotify URL/URI formats.\n\n**spotify-uri** get passed around in a variety of flavors. This module parses them\ninto a JavaScript object so you can work with them further. You can also convert\nthem back into Spotify URIs or HTTP URLs.\n\n## Install\n\n```bash\n$ npm install spotify-uri\n```\n\n## Usage\n\nJust call `parse` method:\n\n```js\nconst { parse } = require('spotify-uri')\n\nspotifyUri.parse('spotify:track:3GU4cxkfdc3lIp9pFEMMmw')\n// { \n//   uri: 'spotify:track:3GU4cxkfdc3lIp9pFEMMmw',\n//   type: 'track',\n//   id: '3GU4cxkfdc3lIp9pFEMMmw' \n// }\n\nspotifyUri.parse('http://open.spotify.com/track/1pKYYY0dkg23sQQXi0Q5zN')\n// { \n//   uri: 'http://open.spotify.com/track/1pKYYY0dkg23sQQXi0Q5zN',\n//   type: 'track',\n//   id: '1pKYYY0dkg23sQQXi0Q5zN' \n// }\n```\n\nYou can also format the parsed objects back into a URI or HTTP URL:\n\n```js\nconst { parse, formatURI, formatOpenURL, formatPlayURL, formatEmbedURL } = require('spotify-uri')\n\nconst parsed = parse('http://open.spotify.com/track/1pKYYY0dkg23sQQXi0Q5zN')\n\nformatURI(parsed) // => 'spotify:track:1pKYYY0dkg23sQQXi0Q5zN'\nformatOpenURL(parsed) // => 'http://open.spotify.com/track/1pKYYY0dkg23sQQXi0Q5zN'\nformatPlayURL(parsed) // => 'https://play.spotify.com/track/1pKYYY0dkg23sQQXi0Q5zN'\nformatEmbedURL(parsed) // => 'https://embed.spotify.com/?uri=spotify:track:1pKYYY0dkg23sQQXi0Q5zN'\n```\n\nSee the [test cases](./test) for some more examples of Spotify URIs.\n\n## API\n\n### .parse(String uri) → Object\n\nParses a Spotify URI or a Spotify HTTP(s) URL into an Object. The specific\nproperties set on the returned Object depend on the \"type\" of `uri` that gets\npassed in. The different \"types\" are listed below:\n\n### .formatURI(Object parsedUri) → String\n\nFormats a parsed URI Object back into a Spotify URI. For example:\n\n``` js\nconst { parse, formatURI } = require('spotify-uri')\nconst parsed = spotifyUri.parse('https://play.spotify.com/track/3GU4cxkfdc3lIp9pFEMMmw')\nformatURI(parsed) // => 'spotify:track:3GU4cxkfdc3lIp9pFEMMmw'\n```\n\n### .formatOpenURL(Object parsedUri) → String\n\nFormats a parsed URI Object back into a Spotify HTTP \"open\" URL. For example:\n\n``` js\nconst { parse, formatOpenURL } = require('spotify-uri')\nconst parsed = parse('spotify:track:3c1zC1Ma3987kQcHQfcG0Q')\nformatOpenURL(parsed) // => 'http://open.spotify.com/track/3c1zC1Ma3987kQcHQfcG0Q'\n```\n\n### .formatPlayURL(Object parsedUri) → String\n\nFormats a parsed URI Object back into a Spotify HTTPS \"play\" URL. For example:\n\n``` js\nconst { parse, formatPlayURL } = require('spotify-uri')\nconst parsed = parse('spotify:track:4Jgp57InfWE4MxJLfheNVz')\nformatPlayURL(parsed) // => 'https://play.spotify.com/track/4Jgp57InfWE4MxJLfheNVz'\n```\n\n### .formatEmbedURL(Object parsedUri) → String\n\nFormats a parsed URI Object back into a Spotify HTTPS \"embed\" URL. For example:\n\n``` js\nconst { parse, formatEmbedURL } = require('spotify-uri')\nconst parsed = parse('spotify:track:6JmI8SpUHoQ4yveHLjTrko')\nformatEmbedURL(parsed) // => 'https://embed.spotify.com/?uri=spotify:track:6JmI8SpUHoQ4yveHLjTrko'\n```\n\n## License\n\n**spotify-uri** © [Nathan Rajlich](http://n8.io), released under the [MIT](https://github.com/microlinkhq/spotify-url-info/blob/master/LICENSE.md) License.<br>\nAuthored by [Nathan Rajlich](http://n8.io) and maintained by [Kiko Beats](https://kikobeats.com) with help from [contributors](https://github.com/microlinkhq/spotify-url-info/contributors).\n"
}